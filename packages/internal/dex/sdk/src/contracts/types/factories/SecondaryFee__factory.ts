/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { SecondaryFee, SecondaryFeeInterface } from "../SecondaryFee";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_uniRouter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "feePayer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "feeRecipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeAmount",
        type: "uint256",
      },
    ],
    name: "FeeTaken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "BASIS_POINT_PRECISION",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SERVICE_FEE",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "feePrcntBasisPoints",
            type: "uint16",
          },
        ],
        internalType: "struct ISecondaryFee.ServiceFeeParams[]",
        name: "serviceFee",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amountIn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOutMinimum",
            type: "uint256",
          },
          {
            internalType: "uint160",
            name: "sqrtPriceLimitX96",
            type: "uint160",
          },
        ],
        internalType: "struct IV3SwapRouter.ExactInputSingleParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "exactInputSingleWithServiceFee",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "feePrcntBasisPoints",
            type: "uint16",
          },
        ],
        internalType: "struct ISecondaryFee.ServiceFeeParams[]",
        name: "serviceFee",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "path",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amountIn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOutMinimum",
            type: "uint256",
          },
        ],
        internalType: "struct IV3SwapRouter.ExactInputParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "exactInputWithServiceFee",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "feePrcntBasisPoints",
            type: "uint16",
          },
        ],
        internalType: "struct ISecondaryFee.ServiceFeeParams[]",
        name: "serviceFee",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amountOut",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountInMaximum",
            type: "uint256",
          },
          {
            internalType: "uint160",
            name: "sqrtPriceLimitX96",
            type: "uint160",
          },
        ],
        internalType: "struct IV3SwapRouter.ExactOutputSingleParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "exactOutputSingleWithServiceFee",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "feePrcntBasisPoints",
            type: "uint16",
          },
        ],
        internalType: "struct ISecondaryFee.ServiceFeeParams[]",
        name: "serviceFee",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "path",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amountOut",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountInMaximum",
            type: "uint256",
          },
        ],
        internalType: "struct IV3SwapRouter.ExactOutputParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "exactOutputWithServiceFee",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapRouter",
    outputs: [
      {
        internalType: "contract IV3SwapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405162001c6d38038062001c6d833981016040819052610031916100bc565b61003a3361006c565b6000805460ff60a01b19169055600180546001600160a01b0319166001600160a01b03929092169190911790556100ec565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100ce57600080fd5b81516001600160a01b03811681146100e557600080fd5b9392505050565b611b7180620000fc6000396000f3fe6080604052600436106100c25760003560e01c8063735de9f71161007f5780638da5cb5b116100595780638da5cb5b146101df578063d9a6f705146101fd578063ed921d3c14610213578063f2fde38b1461022657600080fd5b8063735de9f71461017f578063742ac944146101b75780638456cb59146101ca57600080fd5b80631411734e146100c757806314d90e1b146100ed5780631fd168ff146101165780633f4ba83a146101295780635c975abb14610140578063715018a61461016a575b600080fd5b6100da6100d5366004611744565b610246565b6040519081526020015b60405180910390f35b3480156100f957600080fd5b506101036103e881565b60405161ffff90911681526020016100e4565b6100da610124366004611744565b6103a4565b34801561013557600080fd5b5061013e610514565b005b34801561014c57600080fd5b50600054600160a01b900460ff1660405190151581526020016100e4565b34801561017657600080fd5b5061013e610526565b34801561018b57600080fd5b5060015461019f906001600160a01b031681565b6040516001600160a01b0390911681526020016100e4565b6100da6101c5366004611840565b610538565b3480156101d657600080fd5b5061013e610675565b3480156101eb57600080fd5b506000546001600160a01b031661019f565b34801561020957600080fd5b5061010361271081565b6100da610221366004611840565b610685565b34801561023257600080fd5b5061013e610241366004611896565b6107ad565b60208101516000906001600160a01b03163314801590610273575060208201516001600160a01b03163014155b156102995760405162461bcd60e51b8152600401610290906118ba565b60405180910390fd5b60006102a88360000151610826565b905060008061031383866040015187602001518a8a808060200260200160405190810160405280939291908181526020016000905b82821015610309576102fa60408302860136819003810190611907565b815260200190600101906102dd565b5050505050610838565b60408088018390526001600160a01b0380831660208a0152600154915163b858183f60e01b8152939550919350169063b858183f906103569088906004016119ea565b6020604051808303816000875af1158015610375573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039991906119fd565b979650505050505050565b604081015181516000919082906103ba90610919565b905060006103cb8560000151610826565b905060008060008061043e868a606001518b604001518c602001518f8f808060200260200160405190810160405280939291908181526020016000905b828210156104345761042560408302860136819003810190611907565b81526020019060010190610408565b505050505061094f565b9350935093509350838960400181815250508289602001906001600160a01b031690816001600160a01b031681525050600160009054906101000a90046001600160a01b03166001600160a01b03166309b813468a6040518263ffffffff1660e01b81526004016104af91906119ea565b6020604051808303816000875af11580156104ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f291906119fd565b97506105068787878c604001518587610a30565b505050505050509392505050565b61051c610c73565b610524610ccd565b565b61052e610c73565b6105246000610d22565b60608101516000906001600160a01b03163314801590610565575060608201516001600160a01b03163014155b156105825760405162461bcd60e51b8152600401610290906118ba565b6000806105e58460000151856080015186606001518989808060200260200160405190810160405280939291908181526020016000905b82821015610309576105d660408302860136819003810190611907565b815260200190600101906105b9565b608086018290526001600160a01b0380821660608801526001546040516304e45aaf60e01b815293955091935016906304e45aaf90610628908790600401611a16565b6020604051808303816000875af1158015610647573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066b91906119fd565b9695505050505050565b61067d610c73565b610524610d72565b600080826080015190506000806000806106fa87600001518860a0015189608001518a606001518d8d808060200260200160405190810160405280939291908181526020016000905b82821015610434576106eb60408302860136819003810190611907565b815260200190600101906106ce565b60808b018490526001600160a01b0380841660608d0152600154604051635023b4df60e01b815295995093975091955093501690635023b4df90610742908a90600401611a16565b6020604051808303816000875af1158015610761573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078591906119fd565b95506107a185886000015189602001518a608001518587610a30565b50505050509392505050565b6107b5610c73565b6001600160a01b03811661081a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610290565b61082381610d22565b50565b60006108328282610db5565b92915050565b600080548190600160a01b900460ff16610877576000806108598786610e1a565b90925090506108688288611a8b565b96506108748882610ff8565b50505b6040516323b872dd60e01b8152336004820152306024820152604481018690526001600160a01b038716906323b872dd906064016020604051808303816000875af11580156108ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ee9190611a9e565b506108f98686611173565b306001600160a01b0385160361090d573393505b50929491935090915050565b6000806014835161092a9190611a8b565b9050600061093a8483601461126a565b9050610947816000610db5565b949350505050565b600080606081808261096b60005460ff600160a01b9091041690565b61098b576109798988610e1a565b9092509050610988828a611ac0565b98505b6001600160a01b038816301461099f573097505b6109a98b8b611173565b6040516323b872dd60e01b8152336004820152306024820152604481018b90526001600160a01b038c16906323b872dd906064016020604051808303816000875af11580156109fc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a209190611a9e565b50979a9699509697505050505050565b600054600160a01b900460ff16610a4b57610a4b8482611377565b6040516370a0823160e01b81523060048201526000906001600160a01b038616906370a0823190602401602060405180830381865afa158015610a92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab691906119fd565b9050610ac28385611a8b565b811015610b115760405162461bcd60e51b815260206004820181905260248201527f696e636f72726563742066656520616d6f756e742064697374726962757465646044820152606401610290565b60405163a9059cbb60e01b8152336004820152602481018890526001600160a01b0386169063a9059cbb906044016020604051808303816000875af1158015610b5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b829190611a9e565b506040516370a0823160e01b81523060048201526000906001600160a01b038816906370a0823190602401602060405180830381865afa158015610bca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bee91906119fd565b90508015610c695760405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0388169063a9059cbb906044016020604051808303816000875af1158015610c43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c679190611a9e565b505b5050505050505050565b6000546001600160a01b031633146105245760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610290565b610cd56114e6565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610d7a611536565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610d053390565b6000610dc2826014611ac0565b83511015610e0a5760405162461bcd60e51b8152602060048201526015602482015274746f416464726573735f6f75744f66426f756e647360581b6044820152606401610290565b500160200151600160601b900490565b6000606081805b8451811015610e6b57848181518110610e3c57610e3c611ad3565b60200260200101516020015161ffff1682610e579190611ac0565b915080610e6381611ae9565b915050610e21565b506103e8811115610ebe5760405162461bcd60e51b815260206004820152601d60248201527f5365727669636520666565203e204d41585f534552564943455f4645450000006044820152606401610290565b600080855167ffffffffffffffff811115610edb57610edb6115c8565b604051908082528060200260200182016040528015610f2057816020015b6040805180820190915260008082526020820152815260200190600190039081610ef95790505b50905060005b8651811015610fe957600061271061ffff16888381518110610f4a57610f4a611ad3565b60200260200101516020015161ffff168a610f659190611b02565b610f6f9190611b19565b90506040518060400160405280898481518110610f8e57610f8e611ad3565b6020026020010151600001516001600160a01b0316815260200182815250838381518110610fbe57610fbe611ad3565b6020908102919091010152610fd38185611ac0565b9350508080610fe190611ae9565b915050610f26565b509093509150505b9250929050565b60005b815181101561116e57826001600160a01b03166323b872dd3384848151811061102657611026611ad3565b60200260200101516000015185858151811061104457611044611ad3565b60209081029190910181015101516040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af11580156110a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ca9190611a9e565b508181815181106110dd576110dd611ad3565b6020026020010151600001516001600160a01b0316336001600160a01b0316846001600160a01b03167f1f9a9fdac86b6ca3c5300bec0b61555cded1f1a234378602dcca6c27085eac8e85858151811061113957611139611ad3565b60200260200101516020015160405161115491815260200190565b60405180910390a48061116681611ae9565b915050610ffb565b505050565b600154604051636eb1769f60e11b81523060048201526001600160a01b039182166024820152829184169063dd62ed3e90604401602060405180830381865afa1580156111c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e891906119fd565b10156112665760015460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529083169063095ea7b3906044016020604051808303816000875af1158015611242573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116e9190611a9e565b5050565b60608161127881601f611ac0565b10156112b75760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b6044820152606401610290565b6112c18284611ac0565b845110156113055760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b6044820152606401610290565b606082158015611324576040519150600082526020820160405261136e565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561135d578051835260209283019201611345565b5050858452601f01601f1916604052505b50949350505050565b60005b815181101561116e57826001600160a01b031663a9059cbb8383815181106113a4576113a4611ad3565b6020026020010151600001518484815181106113c2576113c2611ad3565b6020026020010151602001516040518363ffffffff1660e01b81526004016113ff9291906001600160a01b03929092168252602082015260400190565b6020604051808303816000875af115801561141e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114429190611a9e565b5081818151811061145557611455611ad3565b6020026020010151600001516001600160a01b0316336001600160a01b0316846001600160a01b03167f1f9a9fdac86b6ca3c5300bec0b61555cded1f1a234378602dcca6c27085eac8e8585815181106114b1576114b1611ad3565b6020026020010151602001516040516114cc91815260200190565b60405180910390a4806114de81611ae9565b91505061137a565b600054600160a01b900460ff166105245760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610290565b600054600160a01b900460ff16156105245760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610290565b60008083601f84011261159557600080fd5b50813567ffffffffffffffff8111156115ad57600080fd5b6020830191508360208260061b8501011115610ff157600080fd5b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff81118282101715611601576116016115c8565b60405290565b60405160e0810167ffffffffffffffff81118282101715611601576116016115c8565b604051601f8201601f1916810167ffffffffffffffff81118282101715611653576116536115c8565b604052919050565b6001600160a01b038116811461082357600080fd5b803561167b8161165b565b919050565b60006080828403121561169257600080fd5b61169a6115de565b9050813567ffffffffffffffff808211156116b457600080fd5b818401915084601f8301126116c857600080fd5b81356020828211156116dc576116dc6115c8565b6116ee601f8301601f1916820161162a565b9250818352868183860101111561170457600080fd5b81818501828501376000818385010152828552611722818701611670565b8186015250505050604082013560408201526060820135606082015292915050565b60008060006040848603121561175957600080fd5b833567ffffffffffffffff8082111561177157600080fd5b61177d87838801611583565b9095509350602086013591508082111561179657600080fd5b506117a386828701611680565b9150509250925092565b600060e082840312156117bf57600080fd5b6117c7611607565b905081356117d48161165b565b815260208201356117e48161165b565b6020820152604082013562ffffff811681146117ff57600080fd5b604082015261181060608301611670565b60608201526080820135608082015260a082013560a082015261183560c08301611670565b60c082015292915050565b6000806000610100848603121561185657600080fd5b833567ffffffffffffffff81111561186d57600080fd5b61187986828701611583565b909450925061188d905085602086016117ad565b90509250925092565b6000602082840312156118a857600080fd5b81356118b38161165b565b9392505050565b6020808252602d908201527f726563697069656e74206d757374206265206d73672e73656e646572206f722060408201526c1d1a1a5cc818dbdb9d1c9858dd609a1b606082015260800190565b60006040828403121561191957600080fd5b6040516040810181811067ffffffffffffffff8211171561193c5761193c6115c8565b604052823561194a8161165b565b8152602083013561ffff8116811461196157600080fd5b60208201529392505050565b6000815160808452805180608086015260005b8181101561199d57602081840181015160a0888401015201611980565b50600060a08287010152602084015191506119c360208601836001600160a01b03169052565b60408481015190860152606093840151938501939093525050601f01601f19160160a00190565b6020815260006118b3602083018461196d565b600060208284031215611a0f57600080fd5b5051919050565b60e08101610832828480516001600160a01b03908116835260208083015182169084015260408083015162ffffff16908401526060808301518216908401526080808301519084015260a0828101519084015260c09182015116910152565b634e487b7160e01b600052601160045260246000fd5b8181038181111561083257610832611a75565b600060208284031215611ab057600080fd5b815180151581146118b357600080fd5b8082018082111561083257610832611a75565b634e487b7160e01b600052603260045260246000fd5b600060018201611afb57611afb611a75565b5060010190565b808202811582820484141761083257610832611a75565b600082611b3657634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220ace639a098395b7bea514c42166a1e5a567128581e5b4dad8d6cc013080bd70964736f6c63430008130033";

type SecondaryFeeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SecondaryFeeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SecondaryFee__factory extends ContractFactory {
  constructor(...args: SecondaryFeeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _uniRouter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SecondaryFee> {
    return super.deploy(_uniRouter, overrides || {}) as Promise<SecondaryFee>;
  }
  override getDeployTransaction(
    _uniRouter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_uniRouter, overrides || {});
  }
  override attach(address: string): SecondaryFee {
    return super.attach(address) as SecondaryFee;
  }
  override connect(signer: Signer): SecondaryFee__factory {
    return super.connect(signer) as SecondaryFee__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SecondaryFeeInterface {
    return new utils.Interface(_abi) as SecondaryFeeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SecondaryFee {
    return new Contract(address, _abi, signerOrProvider) as SecondaryFee;
  }
}
