/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { SecondaryFee, SecondaryFeeInterface } from "../SecondaryFee";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
      {
        internalType: "address",
        name: "_uniRouter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_wimx",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ContractPaused",
    type: "error",
  },
  {
    inputs: [],
    name: "DeadlinePassed",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedToRefundNativeTokens",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedToSendFees",
    type: "error",
  },
  {
    inputs: [],
    name: "FeeTooHigh",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectRecipient",
    type: "error",
  },
  {
    inputs: [],
    name: "InputTokenNotWrapped",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeTokenAmountMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "feePayer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "feeRecipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeAmount",
        type: "uint256",
      },
    ],
    name: "FeeTaken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "feePayer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "feeRecipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeAmount",
        type: "uint256",
      },
    ],
    name: "FeeTaken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "feeBasisPoints",
            type: "uint256",
          },
        ],
        internalType: "struct ISecondaryFee.SecondaryFeeParams[]",
        name: "secondaryFees",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amountIn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOutMinimum",
            type: "uint256",
          },
          {
            internalType: "uint160",
            name: "sqrtPriceLimitX96",
            type: "uint160",
          },
        ],
        internalType: "struct IV3SwapRouter.ExactInputSingleParams",
        name: "swapParams",
        type: "tuple",
      },
    ],
    name: "exactInputSingleWithSecondaryFee",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "feeBasisPoints",
            type: "uint256",
          },
        ],
        internalType: "struct ISecondaryFee.SecondaryFeeParams[]",
        name: "secondaryFees",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "path",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amountIn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOutMinimum",
            type: "uint256",
          },
        ],
        internalType: "struct IV3SwapRouter.ExactInputParams",
        name: "swapParams",
        type: "tuple",
      },
    ],
    name: "exactInputWithSecondaryFee",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "feeBasisPoints",
            type: "uint256",
          },
        ],
        internalType: "struct ISecondaryFee.SecondaryFeeParams[]",
        name: "secondaryFees",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amountOut",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountInMaximum",
            type: "uint256",
          },
          {
            internalType: "uint160",
            name: "sqrtPriceLimitX96",
            type: "uint160",
          },
        ],
        internalType: "struct IV3SwapRouter.ExactOutputSingleParams",
        name: "swapParams",
        type: "tuple",
      },
    ],
    name: "exactOutputSingleWithSecondaryFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "feeBasisPoints",
            type: "uint256",
          },
        ],
        internalType: "struct ISecondaryFee.SecondaryFeeParams[]",
        name: "secondaryFees",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "path",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amountOut",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountInMaximum",
            type: "uint256",
          },
        ],
        internalType: "struct IV3SwapRouter.ExactOutputParams",
        name: "swapParams",
        type: "tuple",
      },
    ],
    name: "exactOutputWithSecondaryFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "",
        type: "bytes[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "peripheryPayments",
    outputs: [
      {
        internalType: "contract IPeripheryPayments",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapRouter",
    outputs: [
      {
        internalType: "contract IV3SwapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountMinimum",
        type: "uint256",
      },
    ],
    name: "unwrapNativeToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "wimx",
    outputs: [
      {
        internalType: "contract IWIMX",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "erc20",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200317c3803806200317c83398101604081905262000034916200015c565b6001805460ff191690556200004b6000846200009e565b600180546001600160a01b039384166101008102610100600160a81b03199092169190911790915560038054929093166001600160a01b03199283161790925560028054909116909117905550620001a6565b6000828152602081815260408083206001600160a01b038516845290915290205460ff166200013b576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620000fa3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b80516001600160a01b03811681146200015757600080fd5b919050565b6000806000606084860312156200017257600080fd5b6200017d846200013f565b92506200018d602085016200013f565b91506200019d604085016200013f565b90509250925092565b612fc680620001b66000396000f3fe60806040526004361061012d5760003560e01c806358e81a50116100ab578063838a32cb1161006f578063838a32cb146103175780638456cb591461033757806391d148541461034c578063a217fddf1461036c578063ac9650d814610381578063d547741f146103a157600080fd5b806358e81a50146102945780635ae401dc146102a75780635c975abb146102c75780635ebca799146102df578063735de9f7146102f257600080fd5b80632f2ff15d116100f25780632f2ff15d1461021957806336568abe14610239578063383ebb0b146102595780633f4ba83a1461026c5780635640f6591461028157600080fd5b80620fa9fb1461013957806301ffc9a71461015b578063116944b214610190578063180dc97f146101b1578063248a9ca3146101e957600080fd5b3661013457005b600080fd5b34801561014557600080fd5b5061015961015436600461277b565b6103c1565b005b34801561016757600080fd5b5061017b6101763660046127b4565b61048d565b60405190151581526020015b60405180910390f35b6101a361019e366004612945565b6104c4565b604051908152602001610187565b3480156101bd57600080fd5b506002546101d1906001600160a01b031681565b6040516001600160a01b039091168152602001610187565b3480156101f557600080fd5b506101a361020436600461299a565b60009081526020819052604090206001015490565b34801561022557600080fd5b506101596102343660046129b3565b61071c565b34801561024557600080fd5b506101596102543660046129b3565b610741565b6101a3610267366004612a9b565b6107c4565b34801561027857600080fd5b50610159610b33565b6101a361028f366004612a9b565b610b83565b6101a36102a2366004612945565b610e01565b6102ba6102b5366004612b47565b611136565b6040516101879190612be2565b3480156102d357600080fd5b5060015460ff1661017b565b6101596102ed36600461299a565b61116b565b3480156102fe57600080fd5b506001546101d19061010090046001600160a01b031681565b34801561032357600080fd5b506003546101d1906001600160a01b031681565b34801561034357600080fd5b5061015961131b565b34801561035857600080fd5b5061017b6103673660046129b3565b611369565b34801561037857600080fd5b506101a3600081565b34801561038d57600080fd5b506102ba61039c366004612c44565b611392565b3480156103ad57600080fd5b506101596103bc3660046129b3565b611486565b6103eb7f7a8dc26796a1e50e6e190b70259f58f6a4edd5b22280ceecc82b687b8e98286933611369565b610407576040516282b42960e81b815260040160405180910390fd5b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa15801561044e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104729190612c85565b90506104886001600160a01b03831684836114ab565b505050565b60006001600160e01b03198216637965db0b60e01b14806104be57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60006104d260015460ff1690565b156104f05760405163ab35696f60e01b815260040160405180910390fd5b478015610630578260800151811461051b576040516342f7487960e11b815260040160405180910390fd5b60035483516001600160a01b0390811691161461054b576040516324d0121760e01b815260040160405180910390fd5b6105ab83608001518686808060200260200160405190810160405280939291908181526020016000905b828210156105a15761059260408302860136819003810190612c9e565b81526020019060010190610575565b505050505061150e565b608084018190526001546040516304e45aaf60e01b81526101009091046001600160a01b0316916304e45aaf916105e6908790600401612cf5565b60206040518083038185885af1158015610604573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906106299190612c85565b9150610714565b610695836000015184608001518787808060200260200160405190810160405280939291908181526020016000905b8282101561068b5761067c60408302860136819003810190612c9e565b8152602001906001019061065f565b5050505050611560565b60808401526001546040516304e45aaf60e01b81526101009091046001600160a01b0316906304e45aaf906106ce908690600401612cf5565b6020604051808303816000875af11580156106ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107119190612c85565b91505b509392505050565b600082815260208190526040902060010154610737816115bd565b61048883836115ca565b6001600160a01b03811633146107b65760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6107c0828261164e565b5050565b60006107d260015460ff1690565b156107f05760405163ab35696f60e01b815260040160405180910390fd5b60208201516001600160a01b0316331461081d5760405163519bdea760e01b815260040160405180910390fd5b600061082c83600001516116b3565b90504780156109de576003546001600160a01b03838116911614610863576040516324d0121760e01b815260040160405180910390fd5b83606001518114610887576040516342f7487960e11b815260040160405180910390fd5b6000806108ea86606001518989808060200260200160405190810160405280939291908181526020016000905b828210156108e0576108d160408302860136819003810190612c9e565b815260200190600101906108b4565b50505050506116e1565b606088018190526001546040516304dc09a360e11b81529294509092506000916101009091046001600160a01b0316906309b81346908490610930908b90600401612d9b565b60206040518083038185885af115801561094e573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906109739190612c85565b90506109d281848b8b808060200260200160405190810160405280939291908181526020016000905b828210156109c8576109b960408302860136819003810190612c9e565b8152602001906001019061099c565b5050505050611734565b95505050505050610b2c565b600080610a428487606001518a8a808060200260200160405190810160405280939291908181526020016000905b82821015610a3857610a2960408302860136819003810190612c9e565b81526020019060010190610a0c565b5050505050611828565b606088018190526001546040516304dc09a360e11b81529294509092506000916101009091046001600160a01b0316906309b8134690610a86908a90600401612d9b565b6020604051808303816000875af1158015610aa5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac99190612c85565b90506109d28582858c8c808060200260200160405190810160405280939291908181526020016000905b82821015610b1f57610b1060408302860136819003810190612c9e565b81526020019060010190610af3565b5050505050611882565b50505b9392505050565b610b5d7fe7276a2a84d8de556657ec9cf93a55a7d66f096e529d0582ed08e9e2208b92b533611369565b610b79576040516282b42960e81b815260040160405180910390fd5b610b816118de565b565b6000610b9160015460ff1690565b15610baf5760405163ab35696f60e01b815260040160405180910390fd5b60208201516001600160a01b03163314610bdc5760405163519bdea760e01b815260040160405180910390fd5b6000610beb8360000151611930565b9050478015610d215783604001518114610c18576040516342f7487960e11b815260040160405180910390fd5b6003546001600160a01b03838116911614610c46576040516324d0121760e01b815260040160405180910390fd5b610c9c84604001518787808060200260200160405190810160405280939291908181526020016000905b828210156105a157610c8d60408302860136819003810190612c9e565b81526020019060010190610c70565b6040858101829052600154905163b858183f60e01b81526101009091046001600160a01b03169163b858183f91610cd7908890600401612d9b565b60206040518083038185885af1158015610cf5573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610d1a9190612c85565b9250610b29565b610d788285604001518888808060200260200160405190810160405280939291908181526020016000905b8282101561068b57610d6960408302860136819003810190612c9e565b81526020019060010190610d4c565b604085810191909152600154905163b858183f60e01b81526101009091046001600160a01b03169063b858183f90610db4908790600401612d9b565b6020604051808303816000875af1158015610dd3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df79190612c85565b9695505050505050565b6000610e0f60015460ff1690565b15610e2d5760405163ab35696f60e01b815260040160405180910390fd5b60608201516001600160a01b03163314610e5a5760405163519bdea760e01b815260040160405180910390fd5b478015610ff75760035483516001600160a01b03908116911614610e91576040516324d0121760e01b815260040160405180910390fd5b8260a001518114610eb5576040516342f7487960e11b815260040160405180910390fd5b600080610f0e8560a001518888808060200260200160405190810160405280939291908181526020016000905b828210156108e057610eff60408302860136819003810190612c9e565b81526020019060010190610ee2565b60a08701819052600154604051635023b4df60e01b81529294509092506000916101009091046001600160a01b031690635023b4df908490610f54908a90600401612cf5565b60206040518083038185885af1158015610f72573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610f979190612c85565b9050610fec81848a8a808060200260200160405190810160405280939291908181526020016000905b828210156109c857610fdd60408302860136819003810190612c9e565b81526020019060010190610fc0565b945050505050610b2c565b60008061105585600001518660a001518989808060200260200160405190810160405280939291908181526020016000905b82821015610a385761104660408302860136819003810190612c9e565b81526020019060010190611029565b60a08701819052600154604051635023b4df60e01b81529294509092506000916101009091046001600160a01b031690635023b4df90611099908990600401612cf5565b6020604051808303816000875af11580156110b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110dc9190612c85565b9050610fec866000015182858b8b808060200260200160405190810160405280939291908181526020016000905b82821015610b1f5761112760408302860136819003810190612c9e565b8152602001906001019061110a565b6060834211156111595760405163387b2e5560e11b815260040160405180910390fd5b6111638383611392565b949350505050565b6003546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156111b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d89190612c85565b90508181101561121e5760405162461bcd60e51b8152602060048201526011602482015270092dce6eaccccd2c6d2cadce840ae929ab607b1b60448201526064016107ad565b80156107c057600354604051632e1a7d4d60e01b8152600481018390526001600160a01b0390911690632e1a7d4d90602401600060405180830381600087803b15801561126a57600080fd5b505af115801561127e573d6000803e3d6000fd5b50506040805160008082526020820192839052935033925084916112a29190612dae565b60006040518083038185875af1925050503d80600081146112df576040519150601f19603f3d011682016040523d82523d6000602084013e6112e4565b606091505b50509050806104885760405162461bcd60e51b815260206004820152600360248201526253544560e81b60448201526064016107ad565b6113457ffcb9fcbfa83b897fb2d5cf4b58962164105c1e71489a37ef3ae0db3fdce576f633611369565b611361576040516282b42960e81b815260040160405180910390fd5b610b8161193c565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6060816001600160401b038111156113ac576113ac612822565b6040519080825280602002602001820160405280156113df57816020015b60608152602001906001900390816113ca5790505b50905060005b8281101561147f5761144f3085858481811061140357611403612dca565b90506020028101906114159190612de0565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061197792505050565b82828151811061146157611461612dca565b6020026020010181905250808061147790612e3c565b9150506113e5565b5092915050565b6000828152602081905260409020600101546114a1816115bd565b610488838361164e565b6040516001600160a01b03831660248201526044810182905261048890849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261199c565b600061151982611a71565b506000806115278585611ae4565b90925090506115368286612e55565b945061154181611c0d565b600354611557906001600160a01b031686611d37565b50929392505050565b600061156b82611a71565b506000806115798585611ae4565b90925090506115888286612e55565b94506115948682611e34565b6115a96001600160a01b038716333088611f3d565b6115b38686611d37565b5092949350505050565b6115c78133611f7b565b50565b6115d48282611369565b6107c0576000828152602081815260408083206001600160a01b03851684529091529020805460ff1916600117905561160a3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6116588282611369565b156107c0576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600080601483516116c49190612e55565b905060006116d484836014611fd4565b90506111638160006120e1565b60008060006116ef84611a71565b905060006116ff82612710612e68565b905061170e8661271083612146565b600354909350611727906001600160a01b031684611d37565b85935050505b9250929050565b60008060006117438685611ae4565b9150915061175081611c0d565b600260009054906101000a90046001600160a01b03166001600160a01b03166312210e8a6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156117a057600080fd5b505af11580156117b4573d6000803e3d6000fd5b5050505060008287876117c79190612e55565b6117d19190612e55565b604051909150600090339083156108fc0290849084818181858888f19350505050905080611812576040516382e4f46960e01b815260040160405180910390fd5b61181c8489612e68565b98975050505050505050565b600080600061183684611a71565b9050600061184682612710612e68565b90506118558661271083612146565b92506118618784611d37565b6118766001600160a01b038816333089611f3d565b50939590945092505050565b60008060006118918685611ae4565b9150915061189f8782612186565b6118c933836118ae8989612e55565b6118b89190612e55565b6001600160a01b038a1691906114ab565b6118d38287612e68565b979650505050505050565b6118e661228d565b6001805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60006104be82826120e1565b6119446122d6565b6001805460ff1916811790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833611913565b6060610b2c8383604051806060016040528060278152602001612f6a6027913961231c565b60006119f1826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661238a9092919063ffffffff16565b9050805160001480611a12575080806020019051810190611a129190612e7b565b6104885760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016107ad565b6000805b8251811015611abb57828181518110611a9057611a90612dca565b60200260200101516020015182611aa79190612e68565b915080611ab381612e3c565b915050611a75565b506103e8811115611adf5760405163cd4e616760e01b815260040160405180910390fd5b919050565b6000606082516001600160401b03811115611b0157611b01612822565b604051908082528060200260200182016040528015611b4657816020015b6040805180820190915260008082526020820152815260200190600190039081611b1f5790505b50905060005b8351811015611c05576000611b8b858381518110611b6c57611b6c612dca565b602002602001015160200151612710886123999092919063ffffffff16565b90506040518060400160405280868481518110611baa57611baa612dca565b6020026020010151600001516001600160a01b0316815260200182815250838381518110611bda57611bda612dca565b6020908102919091010152611bef8185612e68565b9350508080611bfd90612e3c565b915050611b4c565b509250929050565b60005b81518110156107c0576000828281518110611c2d57611c2d612dca565b6020026020010151600001516001600160a01b03166108fc848481518110611c5757611c57612dca565b6020026020010151602001519081150290604051600060405180830381858888f19350505050905080611c9d5760405163647373e960e11b815260040160405180910390fd5b828281518110611caf57611caf612dca565b6020026020010151600001516001600160a01b0316336001600160a01b03167fe0e765ab26c1caf691c510426951246128b96830e49cc81d8c093fd551abac35858581518110611d0157611d01612dca565b602002602001015160200151604051611d1c91815260200190565b60405180910390a35080611d2f81612e3c565b915050611c10565b600154604051636eb1769f60e11b81523060048201526001600160a01b0361010090920482166024820152829184169063dd62ed3e90604401602060405180830381865afa158015611d8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611db19190612c85565b10156107c05760015460405163095ea7b360e01b81526101009091046001600160a01b039081166004830152600019602483015283169063095ea7b3906044016020604051808303816000875af1158015611e10573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104889190612e7b565b60005b815181101561048857611e9a33838381518110611e5657611e56612dca565b602002602001015160000151848481518110611e7457611e74612dca565b602002602001015160200151866001600160a01b0316611f3d909392919063ffffffff16565b818181518110611eac57611eac612dca565b6020026020010151600001516001600160a01b0316336001600160a01b0316846001600160a01b03167f1f9a9fdac86b6ca3c5300bec0b61555cded1f1a234378602dcca6c27085eac8e858581518110611f0857611f08612dca565b602002602001015160200151604051611f2391815260200190565b60405180910390a480611f3581612e3c565b915050611e37565b6040516001600160a01b0380851660248301528316604482015260648101829052611f759085906323b872dd60e01b906084016114d7565b50505050565b611f858282611369565b6107c057611f928161243b565b611f9d83602061244d565b604051602001611fae929190612e9d565b60408051601f198184030181529082905262461bcd60e51b82526107ad91600401612f12565b606081611fe281601f612e68565b10156120215760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b60448201526064016107ad565b61202b8284612e68565b8451101561206f5760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b60448201526064016107ad565b60608215801561208e57604051915060008252602082016040526120d8565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156120c75780518352602092830192016120af565b5050858452601f01601f1916604052505b50949350505050565b60006120ee826014612e68565b835110156121365760405162461bcd60e51b8152602060048201526015602482015274746f416464726573735f6f75744f66426f756e647360581b60448201526064016107ad565b500160200151600160601b900490565b6000612153848484612399565b90506000828061216557612165612f25565b8486091115610b2c57600019811061217c57600080fd5b6001019392505050565b60005b8151811015610488576121ea8282815181106121a7576121a7612dca565b6020026020010151600001518383815181106121c5576121c5612dca565b602002602001015160200151856001600160a01b03166114ab9092919063ffffffff16565b8181815181106121fc576121fc612dca565b6020026020010151600001516001600160a01b0316336001600160a01b0316846001600160a01b03167f1f9a9fdac86b6ca3c5300bec0b61555cded1f1a234378602dcca6c27085eac8e85858151811061225857612258612dca565b60200260200101516020015160405161227391815260200190565b60405180910390a48061228581612e3c565b915050612189565b60015460ff16610b815760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016107ad565b60015460ff1615610b815760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016107ad565b6060600080856001600160a01b0316856040516123399190612dae565b600060405180830381855af49150503d8060008114612374576040519150601f19603f3d011682016040523d82523d6000602084013e612379565b606091505b5091509150610df7868383876125e8565b60606111638484600085612661565b600083830281600019858709828110838203039150508084116123bb57600080fd5b806000036123ce57508290049050610b2c565b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b60606104be6001600160a01b03831660145b6060600061245c836002612f3b565b612467906002612e68565b6001600160401b0381111561247e5761247e612822565b6040519080825280601f01601f1916602001820160405280156124a8576020820181803683370190505b509050600360fc1b816000815181106124c3576124c3612dca565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106124f2576124f2612dca565b60200101906001600160f81b031916908160001a9053506000612516846002612f3b565b612521906001612e68565b90505b6001811115612599576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061255557612555612dca565b1a60f81b82828151811061256b5761256b612dca565b60200101906001600160f81b031916908160001a90535060049490941c9361259281612f52565b9050612524565b508315610b2c5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016107ad565b60608315612657578251600003612650576001600160a01b0385163b6126505760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016107ad565b5081611163565b6111638383612731565b6060824710156126c25760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016107ad565b600080866001600160a01b031685876040516126de9190612dae565b60006040518083038185875af1925050503d806000811461271b576040519150601f19603f3d011682016040523d82523d6000602084013e612720565b606091505b50915091506118d3878383876125e8565b8151156127415781518083602001fd5b8060405162461bcd60e51b81526004016107ad9190612f12565b6001600160a01b03811681146115c757600080fd5b8035611adf8161275b565b6000806040838503121561278e57600080fd5b82356127998161275b565b915060208301356127a98161275b565b809150509250929050565b6000602082840312156127c657600080fd5b81356001600160e01b031981168114610b2c57600080fd5b60008083601f8401126127f057600080fd5b5081356001600160401b0381111561280757600080fd5b6020830191508360208260061b850101111561172d57600080fd5b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b038111828210171561285a5761285a612822565b60405290565b604051608081016001600160401b038111828210171561285a5761285a612822565b604051601f8201601f191681016001600160401b03811182821017156128aa576128aa612822565b604052919050565b600060e082840312156128c457600080fd5b6128cc612838565b905081356128d98161275b565b815260208201356128e98161275b565b6020820152604082013562ffffff8116811461290457600080fd5b604082015261291560608301612770565b60608201526080820135608082015260a082013560a082015261293a60c08301612770565b60c082015292915050565b6000806000610100848603121561295b57600080fd5b83356001600160401b0381111561297157600080fd5b61297d868287016127de565b9094509250612991905085602086016128b2565b90509250925092565b6000602082840312156129ac57600080fd5b5035919050565b600080604083850312156129c657600080fd5b8235915060208301356127a98161275b565b6000608082840312156129ea57600080fd5b6129f2612860565b905081356001600160401b0380821115612a0b57600080fd5b818401915084601f830112612a1f57600080fd5b8135602082821115612a3357612a33612822565b612a45601f8301601f19168201612882565b92508183528681838601011115612a5b57600080fd5b81818501828501376000818385010152828552612a79818701612770565b8186015250505050604082013560408201526060820135606082015292915050565b600080600060408486031215612ab057600080fd5b83356001600160401b0380821115612ac757600080fd5b612ad3878388016127de565b90955093506020860135915080821115612aec57600080fd5b50612af9868287016129d8565b9150509250925092565b60008083601f840112612b1557600080fd5b5081356001600160401b03811115612b2c57600080fd5b6020830191508360208260051b850101111561172d57600080fd5b600080600060408486031215612b5c57600080fd5b8335925060208401356001600160401b03811115612b7957600080fd5b612b8586828701612b03565b9497909650939450505050565b60005b83811015612bad578181015183820152602001612b95565b50506000910152565b60008151808452612bce816020860160208601612b92565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015612c3757603f19888603018452612c25858351612bb6565b94509285019290850190600101612c09565b5092979650505050505050565b60008060208385031215612c5757600080fd5b82356001600160401b03811115612c6d57600080fd5b612c7985828601612b03565b90969095509350505050565b600060208284031215612c9757600080fd5b5051919050565b600060408284031215612cb057600080fd5b604051604081018181106001600160401b0382111715612cd257612cd2612822565b6040528235612ce08161275b565b81526020928301359281019290925250919050565b60e081016104be828480516001600160a01b03908116835260208083015182169084015260408083015162ffffff16908401526060808301518216908401526080808301519084015260a0828101519084015260c09182015116910152565b6000815160808452612d696080850182612bb6565b6020848101516001600160a01b0316908601526040808501519086015260609384015193909401929092525090919050565b602081526000610b2c6020830184612d54565b60008251612dc0818460208701612b92565b9190910192915050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112612df757600080fd5b8301803591506001600160401b03821115612e1157600080fd5b60200191503681900382131561172d57600080fd5b634e487b7160e01b600052601160045260246000fd5b600060018201612e4e57612e4e612e26565b5060010190565b818103818111156104be576104be612e26565b808201808211156104be576104be612e26565b600060208284031215612e8d57600080fd5b81518015158114610b2c57600080fd5b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351612ed5816017850160208801612b92565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351612f06816028840160208801612b92565b01602801949350505050565b602081526000610b2c6020830184612bb6565b634e487b7160e01b600052601260045260246000fd5b80820281158282048414176104be576104be612e26565b600081612f6157612f61612e26565b50600019019056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212205ecc15728cad806b0fdea7e68541cb25adce32095fb26ee6a2167b3901e4a9a864736f6c63430008130033";

type SecondaryFeeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SecondaryFeeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SecondaryFee__factory extends ContractFactory {
  constructor(...args: SecondaryFeeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _admin: PromiseOrValue<string>,
    _uniRouter: PromiseOrValue<string>,
    _wimx: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SecondaryFee> {
    return super.deploy(
      _admin,
      _uniRouter,
      _wimx,
      overrides || {}
    ) as Promise<SecondaryFee>;
  }
  override getDeployTransaction(
    _admin: PromiseOrValue<string>,
    _uniRouter: PromiseOrValue<string>,
    _wimx: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _admin,
      _uniRouter,
      _wimx,
      overrides || {}
    );
  }
  override attach(address: string): SecondaryFee {
    return super.attach(address) as SecondaryFee;
  }
  override connect(signer: Signer): SecondaryFee__factory {
    return super.connect(signer) as SecondaryFee__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SecondaryFeeInterface {
    return new utils.Interface(_abi) as SecondaryFeeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SecondaryFee {
    return new Contract(address, _abi, signerOrProvider) as SecondaryFee;
  }
}
