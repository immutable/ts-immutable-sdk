{
    "schemes": [],
    "swagger": "2.0",
    "info": {
        "description": "Recipe API",
        "title": "Recipe API",
        "contact": {},
        "version": "1.0"
    },
    "host": "",
    "basePath": "/recipe/v1",
    "paths": {
        "/recipes": {
            "get": {
                "description": "Get all recipes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "root"
                ],
                "summary": "Get all recipes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "game_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Map of conditions and values prefix key with condition. e.g. condition.item_definition_id=XYZ",
                        "name": "filters",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Recipe"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create recipe",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "root"
                ],
                "summary": "Create recipe",
                "parameters": [
                    {
                        "description": "Recipe creation payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.CreateRecipeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Recipe"
                        }
                    }
                }
            }
        },
        "/recipes/bulk": {
            "post": {
                "description": "Creates multiple recipes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "root"
                ],
                "summary": "Create recipes",
                "parameters": [
                    {
                        "description": "List of recipes to create",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/http.CreateRecipeRequest"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Recipe"
                            }
                        }
                    }
                }
            }
        },
        "/recipes/{id}": {
            "get": {
                "description": "Get recipe by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "root"
                ],
                "summary": "Get recipe by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Recipe ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Recipe"
                        }
                    }
                }
            },
            "put": {
                "description": "Update recipe",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "root"
                ],
                "summary": "Update recipe",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Recipe ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Recipe modification payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.UpdateRecipeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Recipe"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete recipe by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "root"
                ],
                "summary": "Delete recipe by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Recipe ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Condition": {
            "type": "object",
            "properties": {
                "comparison": {
                    "type": "string"
                },
                "expected": {
                    "type": "string"
                },
                "ref": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "domain.Input": {
            "type": "object",
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Condition"
                    }
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "domain.Output": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                },
                "id": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ref": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "domain.Recipe": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "game_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "inputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Input"
                    }
                },
                "name": {
                    "type": "string"
                },
                "outputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Output"
                    }
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "http.Condition": {
            "type": "object",
            "required": [
                "expected",
                "ref"
            ],
            "properties": {
                "comparison": {
                    "type": "string",
                    "enum": [
                        "eq",
                        "lte",
                        "gte",
                        "lt",
                        "gt"
                    ]
                },
                "expected": {
                    "type": "string"
                },
                "ref": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "http.CreateRecipeInput": {
            "type": "object",
            "required": [
                "conditions",
                "name"
            ],
            "properties": {
                "conditions": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/http.Condition"
                    }
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "single_item",
                        "multiple_item",
                        "single_currency",
                        "multiple_currency"
                    ],
                    "example": "single_item"
                }
            }
        },
        "http.CreateRecipeOutput": {
            "type": "object",
            "required": [
                "location",
                "name",
                "ref"
            ],
            "properties": {
                "data": {
                    "type": "object"
                },
                "location": {
                    "type": "string",
                    "enum": [
                        "zkevm",
                        "offchain"
                    ]
                },
                "name": {
                    "type": "string"
                },
                "ref": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "item_definition",
                        "input"
                    ],
                    "example": "item_definition"
                }
            }
        },
        "http.CreateRecipeRequest": {
            "type": "object",
            "required": [
                "game_id",
                "inputs",
                "name",
                "outputs"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "game_id": {
                    "type": "string",
                    "example": "shardbound"
                },
                "inputs": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/http.CreateRecipeInput"
                    }
                },
                "name": {
                    "type": "string"
                },
                "outputs": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/http.CreateRecipeOutput"
                    }
                }
            }
        },
        "http.UpdateRecipeInput": {
            "type": "object",
            "required": [
                "conditions",
                "name"
            ],
            "properties": {
                "conditions": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/http.Condition"
                    }
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "single_item",
                        "multiple_item",
                        "single_currency",
                        "multiple_currency"
                    ],
                    "example": "single_item"
                }
            }
        },
        "http.UpdateRecipeOutput": {
            "type": "object",
            "required": [
                "name",
                "ref"
            ],
            "properties": {
                "data": {
                    "type": "object"
                },
                "id": {
                    "type": "string"
                },
                "location": {
                    "type": "string",
                    "enum": [
                        "zkevm",
                        "offchain"
                    ]
                },
                "name": {
                    "type": "string"
                },
                "ref": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "item_definition",
                        "input"
                    ],
                    "example": "item_definition"
                }
            }
        },
        "http.UpdateRecipeRequest": {
            "type": "object",
            "required": [
                "inputs",
                "name",
                "outputs"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "inputs": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/http.UpdateRecipeInput"
                    }
                },
                "name": {
                    "type": "string"
                },
                "outputs": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/http.UpdateRecipeOutput"
                    }
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "published",
                        "draft"
                    ]
                }
            }
        }
    }
}