/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/recipes': {
    /** Get all recipes */
    get: {
      responses: {
        /** OK */
        200: {
          schema: definitions['domain.Recipe'][];
        };
      };
    };
    /** Create recipe */
    post: {
      parameters: {
        body: {
          /** Recipe creation payload */
          request: definitions['http.CreateRecipeRequest'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['domain.Recipe'];
        };
      };
    };
  };
  '/recipes/{id}': {
    /** Get recipe by id */
    get: {
      parameters: {
        path: {
          /** Recipe ID */
          id: string;
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['domain.Recipe'];
        };
      };
    };
    /** Update recipe */
    put: {
      parameters: {
        path: {
          /** Recipe ID */
          id: string;
        };
        body: {
          /** Recipe modification payload */
          request: definitions['http.UpdateRecipeRequest'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['domain.Recipe'];
        };
      };
    };
    /** Delete recipe by id */
    delete: {
      parameters: {
        path: {
          /** Recipe ID */
          id: string;
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
}

export interface definitions {
  'domain.Condition': {
    comparison?: string;
    expected?: string;
    ref?: string;
    type?: string;
  };
  'domain.Input': {
    conditions?: definitions['domain.Condition'][];
    id?: string;
    name?: string;
    type?: string;
  };
  'domain.Output': {
    data?: { [key: string]: unknown };
    id?: string;
    location?: string;
    name?: string;
    ref?: string;
    type?: string;
  };
  'domain.Recipe': {
    created_at?: string;
    description?: string;
    game_id?: string;
    id?: string;
    inputs?: definitions['domain.Input'][];
    name?: string;
    outputs?: definitions['domain.Output'][];
    status?: string;
    updated_at?: string;
  };
  'http.Condition': {
    comparison?: string;
    expected?: string;
    ref?: string;
    type?: string;
  };
  'http.CreateRecipeInput': {
    conditions?: definitions['http.Condition'][];
    name?: string;
    /**
     * @example single_item
     * @enum {string}
     */
    type?:
      | 'single_item'
      | 'multiple_item'
      | 'single_currency'
      | 'multiple_currency';
  };
  'http.CreateRecipeOutput': {
    data?: { [key: string]: unknown };
    location?: string;
    name?: string;
    ref?: string;
    /**
     * @example item_definition
     * @enum {string}
     */
    type?: 'item_definition' | 'input';
  };
  'http.CreateRecipeRequest': {
    description?: string;
    /** @example shardbound */
    game_id: string;
    inputs?: definitions['http.CreateRecipeInput'][];
    name?: string;
    outputs?: definitions['http.CreateRecipeOutput'][];
  };
  'http.UpdateRecipeInput': {
    conditions?: definitions['http.Condition'][];
    id?: string;
    name?: string;
    /**
     * @example single_item
     * @enum {string}
     */
    type?:
      | 'single_item'
      | 'multiple_item'
      | 'single_currency'
      | 'multiple_currency';
  };
  'http.UpdateRecipeOutput': {
    data?: { [key: string]: unknown };
    id?: string;
    location?: string;
    name?: string;
    ref?: string;
    /**
     * @example item_definition
     * @enum {string}
     */
    type?: 'item_definition' | 'input';
  };
  'http.UpdateRecipeRequest': {
    description?: string;
    inputs?: definitions['http.UpdateRecipeInput'][];
    name?: string;
    outputs?: definitions['http.UpdateRecipeOutput'][];
    status?: string;
  };
}

export interface operations {}

export interface external {}
