/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */

import type { Chain } from './Chain';
import type { Fee } from './Fee';
import type { Item } from './Item';
import type { OrderStatus } from './OrderStatus';
import type { ProtocolData } from './ProtocolData';

export type Order = {
  account_address: string;
  buy: Array<Item>;
  fees: Array<Fee>;
  chain: Chain;
  /**
   * Time the Order is created
   */
  created_at: string;
  /**
   * Time after which the Order is considered expired
   */
  end_at: string;
  /**
   * Global Order identifier
   */
  id: string;
  order_hash: string;
  protocol_data: ProtocolData;
  /**
   * A random value added to the create Order request
   */
  salt: string;
  sell: Array<Item>;
  /**
   * Digital signature generated by the user for the specific Order
   */
  signature: string;
  /**
   * Time after which Order is considered active
   */
  start_at: string;
  status: OrderStatus;
  /**
   * Order type
   */
  type: Order.type;
  /**
   * Time the Order is last updated
   */
  updated_at: string;
};

export namespace Order {

  /**
   * Order type
   */
  export enum type {
    LISTING = 'LISTING',
  }


}

