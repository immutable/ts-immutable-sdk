{
  "logged-in-user-with-nextjs": {
    "tutorial": "logged-in-user-with-nextjs.md",
    "metadata": {
      "title": "User Information after Logging In with NextJS",
      "description": "Example of retrieving and displaying user data after authentication with Immutable Passport in a NextJS application",
      "keywords": [
        "Immutable",
        "SDK",
        "Passport",
        "NextJS",
        "User Info",
        "Linked Addresses",
        "Tokens"
      ],
      "tech_stack": [
        "NextJS",
        "TypeScript",
        "React"
      ],
      "product": "Passport",
      "programming_language": "TypeScript",
      "sidebar_order": 3
    }
  },
  "login-with-nextjs": {
    "tutorial": "login-with-nextjs.md",
    "metadata": {
      "title": "Login with NextJS",
      "description": "A comprehensive example demonstrating various Passport login and logout implementations in a Next.js application.",
      "keywords": [
        "Immutable",
        "SDK",
        "Passport",
        "Login",
        "Logout",
        "Authentication",
        "Identity",
        "Silent Logout",
        "Redirect Logout"
      ],
      "tech_stack": [
        "NextJS",
        "TypeScript",
        "React"
      ],
      "product": "Passport",
      "programming_language": "TypeScript",
      "sidebar_order": 2
    }
  },
  "setup-with-nextjs": {
    "tutorial": "setup-with-nextjs.md",
    "metadata": {
      "title": "Setup",
      "description": "Demonstrates various Passport SDK initialization patterns and configurations",
      "keywords": [
        "Immutable",
        "SDK",
        "Passport",
        "Setup",
        "Configuration",
        "Authentication",
        "Next.js",
        "Overlays",
        "Scopes",
        "Silent Logout"
      ],
      "tech_stack": [
        "Next.js",
        "TypeScript",
        "Biom3"
      ],
      "product": "Passport",
      "programming_language": "TypeScript",
      "sidebar_order": 1
    }
  },
  "wallets-connect-with-nextjs": {
    "tutorial": "wallets-connect-with-nextjs.md",
    "metadata": {
      "title": "Wallets Connect with Next.js",
      "description": "Demonstrates how to connect Immutable Passport to web3 wallets using EIP-1193, ethers.js, and Wagmi in a Next.js application",
      "keywords": [
        "Immutable",
        "SDK",
        "Passport",
        "EIP-1193",
        "ethers.js",
        "Wagmi",
        "Wallet Connect",
        "Next.js"
      ],
      "tech_stack": [
        "Next.js",
        "React",
        "TypeScript",
        "ethers.js",
        "Wagmi",
        "Tailwind CSS"
      ],
      "product": "Passport",
      "programming_language": "TypeScript",
      "sidebar_order": 4
    }
  },
  "wallets-signing-with-nextjs": {
    "tutorial": "wallets-signing-with-nextjs.md",
    "metadata": {
      "title": "Passport Wallet Message Signing with Next.js",
      "description": "Demonstrates how to use Passport SDK for message signing with EIP-712 and ERC-191 standards in a Next.js application",
      "keywords": [
        "Immutable",
        "SDK",
        "Passport",
        "Sign Message",
        "EIP-712",
        "ERC-191",
        "Next.js"
      ],
      "tech_stack": [
        "Next.js",
        "TypeScript",
        "Ethers.js"
      ],
      "product": "Passport",
      "programming_language": "TypeScript",
      "sidebar_order": 6
    }
  },
  "wallets-transactions-with-nextjs": {
    "tutorial": "wallets-transactions-with-nextjs.md",
    "metadata": {
      "title": "Wallet Connection and Transaction Execution with Next.js",
      "description": "This example demonstrates how to establish a connection to the user's wallet and execute transactions on the Immutable zkEVM network using Passport.",
      "keywords": [
        "Immutable",
        "SDK",
        "Passport",
        "Wallet Connection",
        "Transaction Execution",
        "zkEVM"
      ],
      "tech_stack": [
        "Next.js",
        "TypeScript",
        "ethers.js"
      ],
      "product": "Passport",
      "programming_language": "TypeScript",
      "sidebar_order": 5
    }
  }
}