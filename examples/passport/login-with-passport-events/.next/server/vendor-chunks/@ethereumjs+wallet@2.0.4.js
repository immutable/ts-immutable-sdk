"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@ethereumjs+wallet@2.0.4";
exports.ids = ["vendor-chunks/@ethereumjs+wallet@2.0.4"];
exports.modules = {

/***/ "(ssr)/../../../node_modules/.pnpm/@ethereumjs+wallet@2.0.4/node_modules/@ethereumjs/wallet/dist/esm/hdkey.js":
/*!**************************************************************************************************************!*\
  !*** ../../../node_modules/.pnpm/@ethereumjs+wallet@2.0.4/node_modules/@ethereumjs/wallet/dist/esm/hdkey.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EthereumHDKey: () => (/* binding */ EthereumHDKey)\n/* harmony export */ });\n/* harmony import */ var ethereum_cryptography_bip39_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ethereum-cryptography/bip39/index.js */ \"(ssr)/../../../node_modules/.pnpm/ethereum-cryptography@2.2.1/node_modules/ethereum-cryptography/esm/bip39/index.js\");\n/* harmony import */ var ethereum_cryptography_hdkey_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ethereum-cryptography/hdkey.js */ \"(ssr)/../../../node_modules/.pnpm/ethereum-cryptography@2.2.1/node_modules/ethereum-cryptography/esm/hdkey.js\");\n/* harmony import */ var _wallet_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./wallet.js */ \"(ssr)/../../../node_modules/.pnpm/@ethereumjs+wallet@2.0.4/node_modules/@ethereumjs/wallet/dist/esm/wallet.js\");\n\n\n\nclass EthereumHDKey {\n    constructor(_hdkey) {\n        this._hdkey = _hdkey;\n    }\n    /**\n     * Creates an instance based on a seed.\n     */\n    static fromMasterSeed(seedBuffer) {\n        return new EthereumHDKey(ethereum_cryptography_hdkey_js__WEBPACK_IMPORTED_MODULE_1__.HDKey.fromMasterSeed(seedBuffer));\n    }\n    /**\n     * Creates an instance based on BIP39 mnemonic phrases\n     */\n    static fromMnemonic(mnemonic, passphrase) {\n        return EthereumHDKey.fromMasterSeed((0,ethereum_cryptography_bip39_index_js__WEBPACK_IMPORTED_MODULE_0__.mnemonicToSeedSync)(mnemonic, passphrase));\n    }\n    /**\n     * Create an instance based on a BIP32 extended private or public key.\n     */\n    static fromExtendedKey(base58Key) {\n        return new EthereumHDKey(ethereum_cryptography_hdkey_js__WEBPACK_IMPORTED_MODULE_1__.HDKey.fromExtendedKey(base58Key));\n    }\n    /**\n     * Returns a BIP32 extended private key (xprv)\n     */\n    privateExtendedKey() {\n        if (!this._hdkey.privateExtendedKey) {\n            throw new Error('This is a public key only wallet');\n        }\n        return this._hdkey.privateExtendedKey;\n    }\n    /**\n     * Return a BIP32 extended public key (xpub)\n     */\n    publicExtendedKey() {\n        return this._hdkey.publicExtendedKey;\n    }\n    /**\n     * Derives a node based on a path (e.g. m/44'/0'/0/1)\n     */\n    derivePath(path) {\n        return new EthereumHDKey(this._hdkey.derive(path));\n    }\n    /**\n     * Derive a node based on a child index\n     */\n    deriveChild(index) {\n        return new EthereumHDKey(this._hdkey.deriveChild(index));\n    }\n    /**\n     * Return a `Wallet` instance as seen above\n     */\n    getWallet() {\n        if (this._hdkey.privateKey) {\n            return _wallet_js__WEBPACK_IMPORTED_MODULE_2__.Wallet.fromPrivateKey(this._hdkey.privateKey);\n        }\n        if (!this._hdkey.publicKey)\n            throw new Error('No hdkey');\n        return _wallet_js__WEBPACK_IMPORTED_MODULE_2__.Wallet.fromPublicKey(this._hdkey.publicKey, true);\n    }\n}\n//# sourceMappingURL=hdkey.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BldGhlcmV1bWpzK3dhbGxldEAyLjAuNC9ub2RlX21vZHVsZXMvQGV0aGVyZXVtanMvd2FsbGV0L2Rpc3QvZXNtL2hka2V5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMEU7QUFDbkI7QUFDbEI7QUFDOUI7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxpRUFBSztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDLHdGQUFrQjtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLGlFQUFLO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQiw4Q0FBTTtBQUN6QjtBQUNBO0FBQ0E7QUFDQSxlQUFlLDhDQUFNO0FBQ3JCO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BleGFtcGxlcy9sb2dpbi13aXRoLXBhc3Nwb3J0LWV2ZW50cy8uLi8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQGV0aGVyZXVtanMrd2FsbGV0QDIuMC40L25vZGVfbW9kdWxlcy9AZXRoZXJldW1qcy93YWxsZXQvZGlzdC9lc20vaGRrZXkuanM/ZmExMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBtbmVtb25pY1RvU2VlZFN5bmMgfSBmcm9tICdldGhlcmV1bS1jcnlwdG9ncmFwaHkvYmlwMzkvaW5kZXguanMnO1xuaW1wb3J0IHsgSERLZXkgfSBmcm9tICdldGhlcmV1bS1jcnlwdG9ncmFwaHkvaGRrZXkuanMnO1xuaW1wb3J0IHsgV2FsbGV0IH0gZnJvbSAnLi93YWxsZXQuanMnO1xuZXhwb3J0IGNsYXNzIEV0aGVyZXVtSERLZXkge1xuICAgIGNvbnN0cnVjdG9yKF9oZGtleSkge1xuICAgICAgICB0aGlzLl9oZGtleSA9IF9oZGtleTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhbiBpbnN0YW5jZSBiYXNlZCBvbiBhIHNlZWQuXG4gICAgICovXG4gICAgc3RhdGljIGZyb21NYXN0ZXJTZWVkKHNlZWRCdWZmZXIpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBFdGhlcmV1bUhES2V5KEhES2V5LmZyb21NYXN0ZXJTZWVkKHNlZWRCdWZmZXIpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhbiBpbnN0YW5jZSBiYXNlZCBvbiBCSVAzOSBtbmVtb25pYyBwaHJhc2VzXG4gICAgICovXG4gICAgc3RhdGljIGZyb21NbmVtb25pYyhtbmVtb25pYywgcGFzc3BocmFzZSkge1xuICAgICAgICByZXR1cm4gRXRoZXJldW1IREtleS5mcm9tTWFzdGVyU2VlZChtbmVtb25pY1RvU2VlZFN5bmMobW5lbW9uaWMsIHBhc3NwaHJhc2UpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGFuIGluc3RhbmNlIGJhc2VkIG9uIGEgQklQMzIgZXh0ZW5kZWQgcHJpdmF0ZSBvciBwdWJsaWMga2V5LlxuICAgICAqL1xuICAgIHN0YXRpYyBmcm9tRXh0ZW5kZWRLZXkoYmFzZTU4S2V5KSB7XG4gICAgICAgIHJldHVybiBuZXcgRXRoZXJldW1IREtleShIREtleS5mcm9tRXh0ZW5kZWRLZXkoYmFzZTU4S2V5KSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgYSBCSVAzMiBleHRlbmRlZCBwcml2YXRlIGtleSAoeHBydilcbiAgICAgKi9cbiAgICBwcml2YXRlRXh0ZW5kZWRLZXkoKSB7XG4gICAgICAgIGlmICghdGhpcy5faGRrZXkucHJpdmF0ZUV4dGVuZGVkS2V5KSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1RoaXMgaXMgYSBwdWJsaWMga2V5IG9ubHkgd2FsbGV0Jyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX2hka2V5LnByaXZhdGVFeHRlbmRlZEtleTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJuIGEgQklQMzIgZXh0ZW5kZWQgcHVibGljIGtleSAoeHB1YilcbiAgICAgKi9cbiAgICBwdWJsaWNFeHRlbmRlZEtleSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2hka2V5LnB1YmxpY0V4dGVuZGVkS2V5O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBEZXJpdmVzIGEgbm9kZSBiYXNlZCBvbiBhIHBhdGggKGUuZy4gbS80NCcvMCcvMC8xKVxuICAgICAqL1xuICAgIGRlcml2ZVBhdGgocGF0aCkge1xuICAgICAgICByZXR1cm4gbmV3IEV0aGVyZXVtSERLZXkodGhpcy5faGRrZXkuZGVyaXZlKHBhdGgpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRGVyaXZlIGEgbm9kZSBiYXNlZCBvbiBhIGNoaWxkIGluZGV4XG4gICAgICovXG4gICAgZGVyaXZlQ2hpbGQoaW5kZXgpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBFdGhlcmV1bUhES2V5KHRoaXMuX2hka2V5LmRlcml2ZUNoaWxkKGluZGV4KSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybiBhIGBXYWxsZXRgIGluc3RhbmNlIGFzIHNlZW4gYWJvdmVcbiAgICAgKi9cbiAgICBnZXRXYWxsZXQoKSB7XG4gICAgICAgIGlmICh0aGlzLl9oZGtleS5wcml2YXRlS2V5KSB7XG4gICAgICAgICAgICByZXR1cm4gV2FsbGV0LmZyb21Qcml2YXRlS2V5KHRoaXMuX2hka2V5LnByaXZhdGVLZXkpO1xuICAgICAgICB9XG4gICAgICAgIGlmICghdGhpcy5faGRrZXkucHVibGljS2V5KVxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdObyBoZGtleScpO1xuICAgICAgICByZXR1cm4gV2FsbGV0LmZyb21QdWJsaWNLZXkodGhpcy5faGRrZXkucHVibGljS2V5LCB0cnVlKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1oZGtleS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../../node_modules/.pnpm/@ethereumjs+wallet@2.0.4/node_modules/@ethereumjs/wallet/dist/esm/hdkey.js\n");

/***/ }),

/***/ "(ssr)/../../../node_modules/.pnpm/@ethereumjs+wallet@2.0.4/node_modules/@ethereumjs/wallet/dist/esm/index.js":
/*!**************************************************************************************************************!*\
  !*** ../../../node_modules/.pnpm/@ethereumjs+wallet@2.0.4/node_modules/@ethereumjs/wallet/dist/esm/index.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Wallet: () => (/* reexport safe */ _wallet_js__WEBPACK_IMPORTED_MODULE_2__.Wallet),\n/* harmony export */   hdkey: () => (/* reexport module object */ _hdkey_js__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   thirdparty: () => (/* reexport module object */ _thirdparty_js__WEBPACK_IMPORTED_MODULE_1__)\n/* harmony export */ });\n/* harmony import */ var _hdkey_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hdkey.js */ \"(ssr)/../../../node_modules/.pnpm/@ethereumjs+wallet@2.0.4/node_modules/@ethereumjs/wallet/dist/esm/hdkey.js\");\n/* harmony import */ var _thirdparty_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./thirdparty.js */ \"(ssr)/../../../node_modules/.pnpm/@ethereumjs+wallet@2.0.4/node_modules/@ethereumjs/wallet/dist/esm/thirdparty.js\");\n/* harmony import */ var _wallet_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./wallet.js */ \"(ssr)/../../../node_modules/.pnpm/@ethereumjs+wallet@2.0.4/node_modules/@ethereumjs/wallet/dist/esm/wallet.js\");\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BldGhlcmV1bWpzK3dhbGxldEAyLjAuNC9ub2RlX21vZHVsZXMvQGV0aGVyZXVtanMvd2FsbGV0L2Rpc3QvZXNtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFvQztBQUNVO0FBQ2xCO0FBQzVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGV4YW1wbGVzL2xvZ2luLXdpdGgtcGFzc3BvcnQtZXZlbnRzLy4uLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9AZXRoZXJldW1qcyt3YWxsZXRAMi4wLjQvbm9kZV9tb2R1bGVzL0BldGhlcmV1bWpzL3dhbGxldC9kaXN0L2VzbS9pbmRleC5qcz85MTVlIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGFzIGhka2V5IGZyb20gJy4vaGRrZXkuanMnO1xuZXhwb3J0ICogYXMgdGhpcmRwYXJ0eSBmcm9tICcuL3RoaXJkcGFydHkuanMnO1xuZXhwb3J0ICogZnJvbSAnLi93YWxsZXQuanMnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../../node_modules/.pnpm/@ethereumjs+wallet@2.0.4/node_modules/@ethereumjs/wallet/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/../../../node_modules/.pnpm/@ethereumjs+wallet@2.0.4/node_modules/@ethereumjs/wallet/dist/esm/thirdparty.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../node_modules/.pnpm/@ethereumjs+wallet@2.0.4/node_modules/@ethereumjs/wallet/dist/esm/thirdparty.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Thirdparty: () => (/* binding */ Thirdparty),\n/* harmony export */   fromEtherCamp: () => (/* binding */ fromEtherCamp),\n/* harmony export */   fromEtherWallet: () => (/* binding */ fromEtherWallet),\n/* harmony export */   fromQuorumWallet: () => (/* binding */ fromQuorumWallet)\n/* harmony export */ });\n/* harmony import */ var _ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethereumjs/util */ \"(ssr)/../../../node_modules/.pnpm/@ethereumjs+util@9.1.0/node_modules/@ethereumjs/util/dist/esm/index.js\");\n/* harmony import */ var _scure_base__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @scure/base */ \"(ssr)/../../../node_modules/.pnpm/@scure+base@1.1.7/node_modules/@scure/base/lib/esm/index.js\");\n/* harmony import */ var ethereum_cryptography_aes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ethereum-cryptography/aes.js */ \"(ssr)/../../../node_modules/.pnpm/ethereum-cryptography@2.2.1/node_modules/ethereum-cryptography/esm/aes.js\");\n/* harmony import */ var ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ethereum-cryptography/keccak.js */ \"(ssr)/../../../node_modules/.pnpm/ethereum-cryptography@2.2.1/node_modules/ethereum-cryptography/esm/keccak.js\");\n/* harmony import */ var ethereum_cryptography_pbkdf2_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ethereum-cryptography/pbkdf2.js */ \"(ssr)/../../../node_modules/.pnpm/ethereum-cryptography@2.2.1/node_modules/ethereum-cryptography/esm/pbkdf2.js\");\n/* harmony import */ var js_md5__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! js-md5 */ \"(ssr)/../../../node_modules/.pnpm/js-md5@0.8.3/node_modules/js-md5/src/md5.js\");\n/* harmony import */ var _wallet_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./wallet.js */ \"(ssr)/../../../node_modules/.pnpm/@ethereumjs+wallet@2.0.4/node_modules/@ethereumjs/wallet/dist/esm/wallet.js\");\n\n\n\n\n\n\n\nconst evpKdfDefaults = {\n    count: 1,\n    keysize: 16,\n    ivsize: 16,\n    digest: 'md5',\n};\nfunction mergeEvpKdfOptsWithDefaults(opts) {\n    if (!opts) {\n        return evpKdfDefaults;\n    }\n    return {\n        count: opts.count ?? evpKdfDefaults.count,\n        keysize: opts.keysize ?? evpKdfDefaults.keysize,\n        ivsize: opts.ivsize ?? evpKdfDefaults.ivsize,\n        digest: opts.digest ?? evpKdfDefaults.digest,\n    };\n}\n/*\n * opts:\n * - digest - digest algorithm, defaults to md5\n * - count - hash iterations\n * - keysize - desired key size\n * - ivsize - desired IV size\n *\n * Algorithm form https://www.openssl.org/docs/manmaster/crypto/EVP_BytesToKey.html\n *\n * FIXME: not optimised at all\n */\nfunction evp_kdf(data, salt, opts) {\n    const params = mergeEvpKdfOptsWithDefaults(opts);\n    // A single EVP iteration, returns `D_i`, where block equlas to `D_(i-1)`\n    function iter(block) {\n        if (params.digest !== 'md5')\n            throw new Error('Only md5 is supported in evp_kdf');\n        let hash = js_md5__WEBPACK_IMPORTED_MODULE_4__.md5.create();\n        hash.update(block);\n        hash.update(data);\n        hash.update(salt);\n        block = Uint8Array.from(hash.array());\n        for (let i = 1, len = params.count; i < len; i++) {\n            hash = js_md5__WEBPACK_IMPORTED_MODULE_4__.md5.create();\n            hash.update(block);\n            block = new Uint8Array(hash.arrayBuffer());\n        }\n        return block;\n    }\n    const ret = [];\n    let i = 0;\n    while ((0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.concatBytes)(...ret).length < params.keysize + params.ivsize) {\n        ret[i] = iter(i === 0 ? new Uint8Array() : ret[i - 1]);\n        i++;\n    }\n    const tmp = (0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.concatBytes)(...ret);\n    return {\n        key: tmp.subarray(0, params.keysize),\n        iv: tmp.subarray(params.keysize, params.keysize + params.ivsize),\n    };\n}\n// http://stackoverflow.com/questions/25288311/cryptojs-aes-pattern-always-ends-with\nfunction decodeCryptojsSalt(input) {\n    const ciphertext = _scure_base__WEBPACK_IMPORTED_MODULE_6__.base64.decode(input);\n    if ((0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.bytesToUtf8)(ciphertext.subarray(0, 8)) === 'Salted__') {\n        return {\n            salt: ciphertext.subarray(8, 16),\n            ciphertext: ciphertext.subarray(16),\n        };\n    }\n    return { ciphertext };\n}\n/*\n * Third Party API: Import a wallet generated by EtherWallet\n * This wallet format is created by https://github.com/SilentCicero/ethereumjs-accounts\n * and used on https://www.myetherwallet.com/\n */\nasync function fromEtherWallet(input, password) {\n    const json = typeof input === 'object' ? input : JSON.parse(input);\n    let privateKey;\n    if (!json.locked) {\n        if (json.private.length !== 64) {\n            throw new Error('Invalid private key length');\n        }\n        privateKey = (0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.unprefixedHexToBytes)(json.private);\n    }\n    else {\n        if (typeof password !== 'string') {\n            throw new Error('Password required');\n        }\n        if (password.length < 7) {\n            throw new Error('Password must be at least 7 characters');\n        }\n        // the \"encrypted\" version has the low 4 bytes\n        // of the hash of the address appended\n        const hash = json.encrypted ? json.private.slice(0, 128) : json.private;\n        // decode openssl ciphertext + salt encoding\n        const cipher = decodeCryptojsSalt(hash);\n        if (!cipher.salt) {\n            throw new Error('Unsupported EtherWallet key format');\n        }\n        // derive key/iv using OpenSSL EVP as implemented in CryptoJS\n        const evp = evp_kdf((0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.utf8ToBytes)(password), cipher.salt, { keysize: 32, ivsize: 16 });\n        const pr = await (0,ethereum_cryptography_aes_js__WEBPACK_IMPORTED_MODULE_1__.decrypt)(cipher.ciphertext, evp.key, evp.iv, 'aes-256-cbc');\n        // NOTE: yes, they've run it through UTF8\n        privateKey = (0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.unprefixedHexToBytes)((0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.bytesToUtf8)(pr));\n    }\n    const wallet = new _wallet_js__WEBPACK_IMPORTED_MODULE_5__.Wallet(privateKey);\n    if (wallet.getAddressString() !== json.address) {\n        throw new Error('Invalid private key or address');\n    }\n    return wallet;\n}\n/**\n * Third Party API: Import a brain wallet used by Ether.Camp\n */\nfunction fromEtherCamp(passphrase) {\n    return new _wallet_js__WEBPACK_IMPORTED_MODULE_5__.Wallet((0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_2__.keccak256)((0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.utf8ToBytes)(passphrase)));\n}\n/**\n * Third Party API: Import a brain wallet used by Quorum Wallet\n */\nfunction fromQuorumWallet(passphrase, userid) {\n    if (passphrase.length < 10) {\n        throw new Error('Passphrase must be at least 10 characters');\n    }\n    if (userid.length < 10) {\n        throw new Error('User id must be at least 10 characters');\n    }\n    const merged = (0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.utf8ToBytes)(passphrase + userid);\n    const seed = (0,ethereum_cryptography_pbkdf2_js__WEBPACK_IMPORTED_MODULE_3__.pbkdf2Sync)(merged, merged, 2000, 32, 'sha256');\n    return new _wallet_js__WEBPACK_IMPORTED_MODULE_5__.Wallet(seed);\n}\nconst Thirdparty = {\n    fromEtherWallet,\n    fromEtherCamp,\n    fromQuorumWallet,\n};\n//# sourceMappingURL=thirdparty.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../../node_modules/.pnpm/@ethereumjs+wallet@2.0.4/node_modules/@ethereumjs/wallet/dist/esm/thirdparty.js\n");

/***/ }),

/***/ "(ssr)/../../../node_modules/.pnpm/@ethereumjs+wallet@2.0.4/node_modules/@ethereumjs/wallet/dist/esm/wallet.js":
/*!***************************************************************************************************************!*\
  !*** ../../../node_modules/.pnpm/@ethereumjs+wallet@2.0.4/node_modules/@ethereumjs/wallet/dist/esm/wallet.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Wallet: () => (/* binding */ Wallet)\n/* harmony export */ });\n/* harmony import */ var _ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ethereumjs/util */ \"(ssr)/../../../node_modules/.pnpm/@ethereumjs+util@9.1.0/node_modules/@ethereumjs/util/dist/esm/index.js\");\n/* harmony import */ var _scure_base__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @scure/base */ \"(ssr)/../../../node_modules/.pnpm/@scure+base@1.1.7/node_modules/@scure/base/lib/esm/index.js\");\n/* harmony import */ var ethereum_cryptography_aes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ethereum-cryptography/aes.js */ \"(ssr)/../../../node_modules/.pnpm/ethereum-cryptography@2.2.1/node_modules/ethereum-cryptography/esm/aes.js\");\n/* harmony import */ var ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ethereum-cryptography/keccak.js */ \"(ssr)/../../../node_modules/.pnpm/ethereum-cryptography@2.2.1/node_modules/ethereum-cryptography/esm/keccak.js\");\n/* harmony import */ var ethereum_cryptography_pbkdf2_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ethereum-cryptography/pbkdf2.js */ \"(ssr)/../../../node_modules/.pnpm/ethereum-cryptography@2.2.1/node_modules/ethereum-cryptography/esm/pbkdf2.js\");\n/* harmony import */ var ethereum_cryptography_scrypt_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ethereum-cryptography/scrypt.js */ \"(ssr)/../../../node_modules/.pnpm/ethereum-cryptography@2.2.1/node_modules/ethereum-cryptography/esm/scrypt.js\");\n/* harmony import */ var ethereum_cryptography_sha256_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ethereum-cryptography/sha256.js */ \"(ssr)/../../../node_modules/.pnpm/ethereum-cryptography@2.2.1/node_modules/ethereum-cryptography/esm/sha256.js\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! uuid */ \"(ssr)/../../../node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-node/v4.js\");\n\n\n\n\n\n\n\n\nconst bs58check = (0,_scure_base__WEBPACK_IMPORTED_MODULE_6__.base58check)(ethereum_cryptography_sha256_js__WEBPACK_IMPORTED_MODULE_5__.sha256);\nfunction scryptV1(password, salt, kdfparams) {\n    const { N, P, R, DkLen } = kdfparams;\n    return (0,ethereum_cryptography_scrypt_js__WEBPACK_IMPORTED_MODULE_4__.scrypt)(password, salt, N, P, R, DkLen);\n}\nfunction scryptV3(password, kdfparams) {\n    const { salt, n, p, r, dklen } = kdfparams;\n    return (0,ethereum_cryptography_scrypt_js__WEBPACK_IMPORTED_MODULE_4__.scrypt)((0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.utf8ToBytes)(password), salt, n, p, r, dklen);\n}\nfunction scryptV3Out(password, kdfparams) {\n    const { salt, n, p, r, dklen } = kdfparams;\n    return (0,ethereum_cryptography_scrypt_js__WEBPACK_IMPORTED_MODULE_4__.scrypt)((0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.utf8ToBytes)(password), (0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.unprefixedHexToBytes)(salt), n, p, r, dklen);\n}\nfunction validateHexString(paramName, str, length) {\n    if (str.toLowerCase().startsWith('0x')) {\n        str = str.slice(2);\n    }\n    if (!str && length === undefined) {\n        return str;\n    }\n    if (length % 2) {\n        throw new Error(`Invalid length argument, must be an even number`);\n    }\n    if (typeof length === 'number' && str.length !== length) {\n        throw new Error(`Invalid ${paramName}, string must be ${length} hex characters`);\n    }\n    if (!/^([0-9a-f]{2})+$/i.test(str)) {\n        const howMany = typeof length === 'number' ? length : 'empty or a non-zero even number of';\n        throw new Error(`Invalid ${paramName}, string must be ${howMany} hex characters`);\n    }\n    return str;\n}\nfunction validateBytes(paramName, bytes, length) {\n    if (!(bytes instanceof Uint8Array)) {\n        const howManyHex = typeof length === 'number' ? `${length * 2}` : 'empty or a non-zero even number of';\n        const howManyBytes = typeof length === 'number' ? ` (${length} bytes)` : '';\n        throw new Error(`Invalid ${paramName}, must be a string (${howManyHex} hex characters) or Uint8Array${howManyBytes}`);\n    }\n    if (typeof length === 'number' && bytes.length !== length) {\n        throw new Error(`Invalid ${paramName}, Uint8Array must be ${length} bytes`);\n    }\n    return bytes;\n}\nfunction mergeToV3ParamsWithDefaults(params) {\n    const v3Defaults = {\n        cipher: 'aes-128-ctr',\n        kdf: 'scrypt',\n        salt: (0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.randomBytes)(32),\n        iv: (0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.randomBytes)(16),\n        uuid: (0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.randomBytes)(16),\n        dklen: 32,\n        c: 262144,\n        n: 262144,\n        r: 8,\n        p: 1,\n    };\n    if (!params) {\n        return v3Defaults;\n    }\n    if (typeof params.salt === 'string') {\n        params.salt = (0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.unprefixedHexToBytes)(validateHexString('salt', params.salt));\n    }\n    if (typeof params.iv === 'string') {\n        params.iv = (0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.unprefixedHexToBytes)(validateHexString('iv', params.iv, 32));\n    }\n    if (typeof params.uuid === 'string') {\n        params.uuid = (0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.unprefixedHexToBytes)(validateHexString('uuid', params.uuid, 32));\n    }\n    if (params.salt) {\n        validateBytes('salt', params.salt);\n    }\n    if (params.iv) {\n        validateBytes('iv', params.iv, 16);\n    }\n    if (params.uuid) {\n        validateBytes('uuid', params.uuid, 16);\n    }\n    return {\n        ...v3Defaults,\n        ...params,\n    };\n}\nfunction kdfParamsForPBKDF(opts) {\n    return {\n        dklen: opts.dklen,\n        salt: opts.salt,\n        c: opts.c,\n        prf: 'hmac-sha256',\n    };\n}\nfunction kdfParamsForScrypt(opts) {\n    return {\n        dklen: opts.dklen,\n        salt: opts.salt,\n        n: opts.n,\n        p: opts.p,\n        r: opts.r,\n    };\n}\n// wallet implementation\nclass Wallet {\n    constructor(privateKey, publicKey = undefined) {\n        this.privateKey = privateKey;\n        this.publicKey = publicKey;\n        if (privateKey && publicKey) {\n            throw new Error('Cannot supply both a private and a public key to the constructor');\n        }\n        if (privateKey && !(0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.isValidPrivate)(privateKey)) {\n            throw new Error('Private key does not satisfy the curve requirements (ie. it is invalid)');\n        }\n        if (publicKey && !(0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.isValidPublic)(publicKey)) {\n            throw new Error('Invalid public key');\n        }\n    }\n    // static methods\n    /**\n     * Create an instance based on a new random key.\n     *\n     * @param icapDirect setting this to `true` will generate an address suitable for the `ICAP Direct mode`\n     */\n    static generate(icapDirect = false) {\n        if (icapDirect) {\n            const max = BigInt('0x088f924eeceeda7fe92e1f5b0fffffffffffffff');\n            for (;;) {\n                const privateKey = (0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.randomBytes)(32);\n                const hex = (0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.bytesToUnprefixedHex)((0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.privateToAddress)(privateKey));\n                if (BigInt('0x' + hex) <= max) {\n                    return new Wallet(privateKey);\n                }\n            }\n        }\n        else {\n            return new Wallet((0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.randomBytes)(32));\n        }\n    }\n    /**\n     * Create an instance where the address is valid against the supplied pattern (**this will be very slow**)\n     */\n    static generateVanityAddress(pattern) {\n        if (!(pattern instanceof RegExp)) {\n            pattern = new RegExp(pattern);\n        }\n        for (;;) {\n            const privateKey = (0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.randomBytes)(32);\n            const address = (0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.privateToAddress)(privateKey);\n            if (pattern.test((0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.bytesToUnprefixedHex)(address))) {\n                return new Wallet(privateKey);\n            }\n        }\n    }\n    /**\n     * Create an instance based on a public key (certain methods will not be available)\n     *\n     * This method only accepts uncompressed Ethereum-style public keys, unless\n     * the `nonStrict` flag is set to true.\n     */\n    static fromPublicKey(publicKey, nonStrict = false) {\n        if (nonStrict) {\n            publicKey = (0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.importPublic)(publicKey);\n        }\n        return new Wallet(undefined, publicKey);\n    }\n    /**\n     * Create an instance based on a BIP32 extended public key (xpub)\n     */\n    static fromExtendedPublicKey(extendedPublicKey) {\n        if (extendedPublicKey.slice(0, 4) !== 'xpub') {\n            throw new Error('Not an extended public key');\n        }\n        const publicKey = bs58check.decode(extendedPublicKey).subarray(45);\n        // Convert to an Ethereum public key\n        return Wallet.fromPublicKey(publicKey, true);\n    }\n    /**\n     * Create an instance based on a raw private key\n     */\n    static fromPrivateKey(privateKey) {\n        return new Wallet(privateKey);\n    }\n    /**\n     * Create an instance based on a BIP32 extended private key (xprv)\n     */\n    static fromExtendedPrivateKey(extendedPrivateKey) {\n        if (extendedPrivateKey.slice(0, 4) !== 'xprv') {\n            throw new Error('Not an extended private key');\n        }\n        const tmp = bs58check.decode(extendedPrivateKey);\n        if (tmp[45] !== 0) {\n            throw new Error('Invalid extended private key');\n        }\n        return Wallet.fromPrivateKey(tmp.subarray(46));\n    }\n    /**\n     * Import a wallet (Version 1 of the Ethereum wallet format).\n     *\n     * @param input A JSON serialized string, or an object representing V1 Keystore.\n     * @param password The keystore password.\n     */\n    static async fromV1(input, password) {\n        const json = typeof input === 'object' ? input : JSON.parse(input);\n        if (json.Version !== '1') {\n            throw new Error('Not a V1 Wallet');\n        }\n        if (json.Crypto.KeyHeader.Kdf !== 'scrypt') {\n            throw new Error('Unsupported key derivation scheme');\n        }\n        const kdfparams = json.Crypto.KeyHeader.KdfParams;\n        const salt = (0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.unprefixedHexToBytes)(json.Crypto.Salt);\n        const derivedKey = await scryptV1((0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.utf8ToBytes)(password), salt, kdfparams);\n        const ciphertext = (0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.unprefixedHexToBytes)(json.Crypto.CipherText);\n        const mac = (0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_2__.keccak256)((0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.concatBytes)(derivedKey.subarray(16, 32), ciphertext));\n        if ((0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.bytesToUnprefixedHex)(mac) !== json.Crypto.MAC) {\n            throw new Error('Key derivation failed - possibly wrong passphrase');\n        }\n        const seed = await ethereum_cryptography_aes_js__WEBPACK_IMPORTED_MODULE_1__.decrypt(ciphertext, (0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_2__.keccak256)(derivedKey.subarray(0, 16)).subarray(0, 16), (0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.unprefixedHexToBytes)(json.Crypto.IV), 'aes-128-cbc');\n        return new Wallet(seed);\n    }\n    /**\n     * Import a wallet (Version 3 of the Ethereum wallet format). Set `nonStrict` true to accept files with mixed-caps.\n     *\n     * @param input A JSON serialized string, or an object representing V3 Keystore.\n     * @param password The keystore password.\n     */\n    static async fromV3(input, password, nonStrict = false) {\n        const json = typeof input === 'object' ? input : JSON.parse(nonStrict ? input.toLowerCase() : input);\n        if (json.version !== 3) {\n            throw new Error('Not a V3 wallet');\n        }\n        let derivedKey, kdfparams;\n        if (json.crypto.kdf === 'scrypt') {\n            kdfparams = json.crypto.kdfparams;\n            // FIXME: support progress reporting callback\n            derivedKey = await scryptV3Out(password, kdfparams);\n        }\n        else if (json.crypto.kdf === 'pbkdf2') {\n            kdfparams = json.crypto.kdfparams;\n            if (kdfparams.prf !== 'hmac-sha256') {\n                throw new Error('Unsupported parameters to PBKDF2');\n            }\n            derivedKey = await (0,ethereum_cryptography_pbkdf2_js__WEBPACK_IMPORTED_MODULE_3__.pbkdf2)((0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.utf8ToBytes)(password), (0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.unprefixedHexToBytes)(kdfparams.salt), kdfparams.c, kdfparams.dklen, 'sha256');\n        }\n        else {\n            throw new Error('Unsupported key derivation scheme');\n        }\n        const ciphertext = (0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.unprefixedHexToBytes)(json.crypto.ciphertext);\n        const mac = (0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_2__.keccak256)((0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.concatBytes)(derivedKey.subarray(16, 32), ciphertext));\n        if ((0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.bytesToUnprefixedHex)(mac) !== json.crypto.mac) {\n            throw new Error('Key derivation failed - possibly wrong passphrase');\n        }\n        const seed = await ethereum_cryptography_aes_js__WEBPACK_IMPORTED_MODULE_1__.decrypt(ciphertext, derivedKey.subarray(0, 16), (0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.unprefixedHexToBytes)(json.crypto.cipherparams.iv), json.crypto.cipher);\n        return new Wallet(seed);\n    }\n    /*\n     * Import an Ethereum Pre Sale wallet.\n     * Based on https://github.com/ethereum/pyethsaletool/blob/master/pyethsaletool.py\n     * JSON fields: encseed, ethaddr, btcaddr, email\n     *\n     * @param input A JSON serialized string, or an object representing EthSale Keystore.\n     * @param password The keystore password.\n     */\n    static async fromEthSale(input, password) {\n        const json = typeof input === 'object' ? input : JSON.parse(input);\n        const encseed = (0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.unprefixedHexToBytes)(json.encseed);\n        // key derivation\n        const pass = (0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.utf8ToBytes)(password);\n        const derivedKey = (await (0,ethereum_cryptography_pbkdf2_js__WEBPACK_IMPORTED_MODULE_3__.pbkdf2)(pass, pass, 2000, 32, 'sha256')).subarray(0, 16);\n        // seed decoding (IV is first 16 bytes)\n        // NOTE: crypto (derived from openssl) when used with aes-*-cbc will handle PKCS#7 padding internally\n        //       see also http://stackoverflow.com/a/31614770/4964819\n        const seed = await ethereum_cryptography_aes_js__WEBPACK_IMPORTED_MODULE_1__.decrypt(encseed.subarray(16), derivedKey, encseed.subarray(0, 16), 'aes-128-cbc', true);\n        const wallet = new Wallet((0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_2__.keccak256)(seed));\n        if ((0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.bytesToUnprefixedHex)(wallet.getAddress()) !== json.ethaddr) {\n            throw new Error('Decoded key mismatch - possibly wrong passphrase');\n        }\n        return wallet;\n    }\n    // private getters\n    /**\n     * Returns the wallet's public key.\n     */\n    get pubKey() {\n        if (this.publicKey === undefined || this.publicKey === null) {\n            this.publicKey = (0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.privateToPublic)(this.privateKey);\n        }\n        return this.publicKey;\n    }\n    /**\n     * Returns the wallet's private key.\n     */\n    get privKey() {\n        if (this.privateKey === undefined || this.privateKey === null) {\n            throw new Error('This is a public key only wallet');\n        }\n        return this.privateKey;\n    }\n    // public instance methods\n    /**\n     * Returns the wallet's private key.\n     *\n     */\n    getPrivateKey() {\n        return this.privKey;\n    }\n    getPrivateKeyString() {\n        return (0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.bytesToHex)(this.privKey);\n    }\n    /**\n     * Returns the wallet's public key.\n     */\n    getPublicKey() {\n        return this.pubKey;\n    }\n    /**\n     * Returns the wallet's public key as a \"0x\" prefixed hex string\n     */\n    getPublicKeyString() {\n        return (0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.bytesToHex)(this.getPublicKey());\n    }\n    /**\n     * Returns the wallet's address.\n     */\n    getAddress() {\n        return (0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.publicToAddress)(this.pubKey);\n    }\n    /**\n     * Returns the wallet's address as a \"0x\" prefixed hex string\n     */\n    getAddressString() {\n        return (0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.bytesToHex)(this.getAddress());\n    }\n    /**\n     * Returns the wallet's private key as a \"0x\" prefixed hex string checksummed\n     * according to [EIP 55](https://github.com/ethereum/EIPs/issues/55).\n     */\n    getChecksumAddressString() {\n        return (0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.toChecksumAddress)(this.getAddressString());\n    }\n    /**\n     * Returns an Etherem Version 3 Keystore Format object representing the wallet\n     *\n     * @param password The password used to encrypt the Keystore.\n     * @param opts The options for the keystore. See [its spec](https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition) for more info.\n     */\n    async toV3(password, opts) {\n        if (this.privateKey === undefined || this.privateKey === null) {\n            throw new Error('This is a public key only wallet');\n        }\n        const v3Params = mergeToV3ParamsWithDefaults(opts);\n        let kdfParams;\n        let derivedKey;\n        switch (v3Params.kdf) {\n            case \"pbkdf2\" /* KDFFunctions.PBKDF */:\n                kdfParams = kdfParamsForPBKDF(v3Params);\n                derivedKey = await (0,ethereum_cryptography_pbkdf2_js__WEBPACK_IMPORTED_MODULE_3__.pbkdf2)((0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.utf8ToBytes)(password), kdfParams.salt, kdfParams.c, kdfParams.dklen, 'sha256');\n                break;\n            case \"scrypt\" /* KDFFunctions.Scrypt */:\n                kdfParams = kdfParamsForScrypt(v3Params);\n                // FIXME: support progress reporting callback\n                derivedKey = await scryptV3(password, kdfParams);\n                break;\n            default:\n                throw new Error('Unsupported kdf');\n        }\n        const ciphertext = await ethereum_cryptography_aes_js__WEBPACK_IMPORTED_MODULE_1__.encrypt(this.privKey, derivedKey.subarray(0, 16), v3Params.iv, v3Params.cipher, false);\n        const mac = (0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_2__.keccak256)((0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.concatBytes)(derivedKey.subarray(16, 32), ciphertext));\n        return {\n            version: 3,\n            id: (0,uuid__WEBPACK_IMPORTED_MODULE_7__[\"default\"])({ random: v3Params.uuid }),\n            // @ts-ignore - the official V3 keystore spec omits the address key\n            address: (0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.bytesToUnprefixedHex)(this.getAddress()),\n            crypto: {\n                ciphertext: (0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.bytesToUnprefixedHex)(ciphertext),\n                cipherparams: { iv: (0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.bytesToUnprefixedHex)(v3Params.iv) },\n                cipher: v3Params.cipher,\n                kdf: v3Params.kdf,\n                kdfparams: {\n                    ...kdfParams,\n                    salt: (0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.bytesToUnprefixedHex)(kdfParams.salt),\n                },\n                mac: (0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.bytesToUnprefixedHex)(mac),\n            },\n        };\n    }\n    /**\n     * Return the suggested filename for V3 keystores.\n     */\n    getV3Filename(timestamp) {\n        /*\n         * We want a timestamp like 2016-03-15T17-11-33.007598288Z. Date formatting\n         * is a pain in Javascript, everbody knows that. We could use moment.js,\n         * but decide to do it manually in order to save space.\n         *\n         * toJSON() returns a pretty close version, so let's use it. It is not UTC though,\n         * but does it really matter?\n         *\n         * Alternative manual way with padding and Date fields: http://stackoverflow.com/a/7244288/4964819\n         *\n         */\n        const ts = timestamp !== undefined ? new Date(timestamp) : new Date();\n        return [\n            'UTC--',\n            ts.toJSON().replace(/:/g, '-'),\n            '--',\n            (0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.bytesToUnprefixedHex)(this.getAddress()),\n        ].join('');\n    }\n    async toV3String(password, opts) {\n        return JSON.stringify(await this.toV3(password, opts));\n    }\n    /**\n     * Verify the publicKey, privateKey pair\n     *\n     * @param publicKey the public key to verify against the private key of the wallet\n     */\n    verifyPublicKey(publicKey) {\n        if (this.privateKey === undefined)\n            return false;\n        return (0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.equalsBytes)((0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_0__.privateToPublic)(this.privateKey), publicKey);\n    }\n}\n//# sourceMappingURL=wallet.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../../node_modules/.pnpm/@ethereumjs+wallet@2.0.4/node_modules/@ethereumjs/wallet/dist/esm/wallet.js\n");

/***/ })

};
;